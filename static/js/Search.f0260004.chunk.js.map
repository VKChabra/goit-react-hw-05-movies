{"version":3,"file":"static/js/Search.f0260004.chunk.js","mappings":"yLAgDA,UA5CmB,SAAC,GAAgB,IAAdA,EAAa,EAAbA,OACdC,GAAWC,EAAAA,EAAAA,MACjB,OACE,gCACGF,IACC,wBACGA,EAAOG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACV,yBACE,SAAC,KAAD,CACEC,GAAE,kBAAaF,GACfG,MAAO,CACLC,KAAMP,EAASQ,SAAWR,EAASS,QAHvC,SAMGL,KAPID,EADC,OAchB,SAAC,KAAD,IACoB,KAAb,OAANJ,QAAM,IAANA,OAAA,EAAAA,EAAQW,SACa,YAApBV,EAASS,QACa,YAAtBT,EAASQ,WACP,gBAAKG,UAAWC,EAAAA,EAAAA,KAAhB,2CAIT,C,iKC/BD,EAAwB,sB,SC+CxB,EAxCe,WACb,OAAsCC,EAAAA,EAAAA,UAAS,MAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAQF,EAAaG,IAAI,UAE/BC,EAAAA,EAAAA,YAAU,WAAM,wCAGd,6FACEN,GAAW,GADb,UAE4BO,EAAAA,EAAAA,IAAYH,GAFxC,gBAEUI,EAFV,EAEUA,QACRV,EAAeU,GACfR,GAAW,GAJb,4CAHc,sBACTI,GADS,mCAUdK,EACD,GAAE,CAACL,IASJ,OACE,iCACE,kBAAMV,UAAWC,EAAAA,EAAAA,KAAWe,SATX,SAAAC,GACnBA,EAAMC,iBACN,IAAMC,EAAOF,EAAMG,cACnBX,EAAgB,CAAEC,MAAOS,EAAKE,SAASlB,YAAYmB,QACnDH,EAAKI,OACN,EAIG,WACE,kBAAOvB,UAAWwB,EAAlB,UACE,kBAAOC,KAAK,OAAOC,KAAK,mBAE1B,mBAAQD,KAAK,SAAb,uBAEDpB,IAAW,SAACsB,EAAA,EAAD,IACXjB,IAAUL,IAAW,SAACuB,EAAA,QAAD,CAAYxC,OAAQe,MAG/C,C,sLC5CD,EAFgB,mCCEH0B,EAAmB,mCAAG,uGAElBC,MAAM,2DAAD,OAC2CC,IAC3DC,MAAK,SAAAC,GACL,IAAoB,IAAhBA,EAASC,GACX,OAAOD,EAASE,MAEnB,IAR8B,wEAU/BC,QAAQC,IAAR,MAV+B,wDAAH,qDAcnBxB,EAAW,mCAAG,WAAMH,GAAN,0FAEVoB,MAAM,qDAAD,OACqCC,EADrC,kBACsDrB,IACtEsB,MAAK,SAAAC,GACL,IAAoB,IAAhBA,EAASC,GACX,OAAOD,EAASE,MAEnB,IARsB,wEAUvBC,QAAQC,IAAR,MAVuB,wDAAH,sDAcXC,EAAiB,mCAAG,WAAMC,GAAN,0FAEhBT,MAAM,sCAAD,OACsBS,EADtB,oBACyCR,IACzDC,MAAK,SAAAC,GACL,IAAoB,IAAhBA,EAASC,GACX,OAAOD,EAASE,MAEnB,IAR4B,wEAU7BC,QAAQC,IAAR,MAV6B,wDAAH,sDAcjBG,EAAc,mCAAG,WAAMD,GAAN,0FAEbT,MAAM,sCAAD,OACsBS,EADtB,4BACiDR,IACjEC,MAAK,SAAAC,GACL,IAAoB,IAAhBA,EAASC,GACX,OAAOD,EAASE,MAEnB,IARyB,wEAU1BC,QAAQC,IAAR,MAV0B,wDAAH,sDAcdI,EAAiB,mCAAG,WAAMF,GAAN,0FAEhBT,MAAM,sCAAD,OACsBS,EADtB,4BACiDR,IACjEC,MAAK,SAAAC,GACL,IAAoB,IAAhBA,EAASC,GACX,OAAOD,EAASE,MAEnB,IAR4B,wEAU7BC,QAAQC,IAAR,MAV6B,wDAAH,qD","sources":["components/MoviesList/index.jsx","webpack://goit-react-hw-05-movies/./src/components/Search/search.module.css?35ae","components/Search/index.jsx","services/apiKey.jsx","services/api.jsx"],"sourcesContent":["import { Link, Outlet, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport main from 'globalStyles/main.module.css';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <>\n      {movies && (\n        <ul>\n          {movies.map(({ id, title }) => (\n            <li key={id}>\n              <Link\n                to={`/movies/${id}`}\n                state={{\n                  from: location.pathname + location.search,\n                }}\n              >\n                {title}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      )}\n      <Outlet />\n      {movies?.length === 0 &&\n        location.search !== '?query=' &&\n        location.pathname === '/movies' && (\n          <div className={main.main}>Sorry, there are no results</div>\n        )}\n    </>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      genre_ids: PropTypes.arrayOf(PropTypes.number).isRequired,\n      overview: PropTypes.string,\n      poster_path: PropTypes.string,\n      release_date: PropTypes.string,\n      vote_average: PropTypes.number,\n    })\n  ),\n};\n\nexport default MoviesList;\n","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"search_label__ECOYC\"};","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { searchMovie } from 'services/api';\nimport MoviesList from 'components/MoviesList';\nimport Loader from 'components/Loader';\nimport main from 'globalStyles/main.module.css';\nimport styles from './search.module.css';\n\nconst Search = () => {\n  const [searchQuery, setSearchQuery] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n\n  useEffect(() => {\n    if (!query) return;\n\n    async function fetchMovieOnQuery() {\n      setLoading(true);\n      const { results } = await searchMovie(query);\n      setSearchQuery(results);\n      setLoading(false);\n    }\n\n    fetchMovieOnQuery();\n  }, [query]);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const form = event.currentTarget;\n    setSearchParams({ query: form.elements.searchQuery.value });\n    form.reset();\n  };\n\n  return (\n    <>\n      <form className={main.main} onSubmit={handleSubmit}>\n        <label className={styles.label}>\n          <input type=\"text\" name=\"searchQuery\" />\n        </label>\n        <button type=\"submit\">Search</button>\n      </form>\n      {loading && <Loader />}\n      {query && !loading && <MoviesList movies={searchQuery} />}\n    </>\n  );\n};\n\nexport default Search;\n","const API_KEY = '16b99e0971797b79067f0be2bdb79de1';\n\nexport default API_KEY;\n","import api_key from './apiKey';\n\nexport const fetchTrendingMovies = async () => {\n  try {\n    return await fetch(\n      `https://api.themoviedb.org/3/trending/movie/day?api_key=${api_key}`\n    ).then(response => {\n      if (response.ok === true) {\n        return response.json();\n      }\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const searchMovie = async query => {\n  try {\n    return await fetch(\n      `https://api.themoviedb.org/3/search/movie?api_key=${api_key}&query=${query}`\n    ).then(response => {\n      if (response.ok === true) {\n        return response.json();\n      }\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchMovieDetails = async movieId => {\n  try {\n    return await fetch(\n      `https://api.themoviedb.org/3/movie/${movieId}?api_key=${api_key}`\n    ).then(response => {\n      if (response.ok === true) {\n        return response.json();\n      }\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchMovieCast = async movieId => {\n  try {\n    return await fetch(\n      `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${api_key}`\n    ).then(response => {\n      if (response.ok === true) {\n        return response.json();\n      }\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchMovieReviews = async movieId => {\n  try {\n    return await fetch(\n      `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${api_key}`\n    ).then(response => {\n      if (response.ok === true) {\n        return response.json();\n      }\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n"],"names":["movies","location","useLocation","map","id","title","to","state","from","pathname","search","length","className","main","useState","searchQuery","setSearchQuery","loading","setLoading","useSearchParams","searchParams","setSearchParams","query","get","useEffect","searchMovie","results","fetchMovieOnQuery","onSubmit","event","preventDefault","form","currentTarget","elements","value","reset","styles","type","name","Loader","MoviesList","fetchTrendingMovies","fetch","api_key","then","response","ok","json","console","log","fetchMovieDetails","movieId","fetchMovieCast","fetchMovieReviews"],"sourceRoot":""}