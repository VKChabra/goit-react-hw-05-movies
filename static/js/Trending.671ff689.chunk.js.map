{"version":3,"file":"static/js/Trending.671ff689.chunk.js","mappings":"+KA0BA,UAxBmB,SAAC,GAAe,IAAbA,EAAY,EAAZA,MACdC,GAAWC,EAAAA,EAAAA,MACjB,OACE,+BACE,gBAAIC,UAAU,aAAd,UACGH,GACCA,EAAMI,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACR,yBACE,SAAC,KAAD,CACEC,GAAE,kBAAaF,GACfG,MAAO,CACLC,KAAMR,EAASS,SAAWT,EAASU,QAHvC,SAMGL,KAPID,EADD,KAYZ,SAAC,KAAD,QAIP,C,yGCHD,UAjBiB,WACf,OAA0BO,EAAAA,EAAAA,UAAS,IAAnC,eAAOZ,EAAP,KAAca,EAAd,KAaA,OAZAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,gHAE8BC,EAAAA,EAAAA,MAF9B,gBAEYC,EAFZ,EAEYA,QACRH,EAASG,GAHb,gDAKIC,QAAQC,IAAR,MALJ,0DADc,uBAAC,WAAD,wBASdC,EACD,GAAE,KAEI,SAAC,UAAD,CAAYnB,MAAOA,GAC3B,C,sLCjBD,EAFgB,mCCEHe,EAAmB,mCAAG,uGAElBK,MAAM,2DAAD,OAC2CC,IAC3DC,MAAK,SAAAC,GACL,IAAoB,IAAhBA,EAASC,GACX,OAAOD,EAASE,MAEnB,IAR8B,wEAU/BR,QAAQC,IAAR,MAV+B,wDAAH,qDAcnBQ,EAAU,mCAAG,WAAMC,GAAN,0FAETP,MAAM,qDAAD,OACqCC,EADrC,kBACsDM,IACtEL,MAAK,SAAAC,GACL,IAAoB,IAAhBA,EAASC,GACX,OAAOD,EAASE,MAEnB,IARqB,wEAUtBR,QAAQC,IAAR,MAVsB,wDAAH,sDAcVU,EAAgB,mCAAG,WAAMC,GAAN,0FAEfT,MAAM,sCAAD,OACsBS,EADtB,oBACwCR,IACxDC,MAAK,SAAAC,GACL,IAAoB,IAAhBA,EAASC,GACX,OAAOD,EAASE,MAEnB,IAR2B,wEAU5BR,QAAQC,IAAR,MAV4B,wDAAH,sDAchBY,EAAa,mCAAG,WAAMD,GAAN,0FAEZT,MAAM,sCAAD,OACsBS,EADtB,4BACgDR,IAChEC,MAAK,SAAAC,GACL,IAAoB,IAAhBA,EAASC,GACX,OAAOD,EAASE,MAEnB,IARwB,wEAUzBR,QAAQC,IAAR,MAVyB,wDAAH,sDAcba,EAAgB,mCAAG,WAAMF,GAAN,0FAEfT,MAAM,sCAAD,OACsBS,EADtB,4BACgDR,IAChEC,MAAK,SAAAC,GACL,IAAoB,IAAhBA,EAASC,GACX,OAAOD,EAASE,MAEnB,IAR2B,wEAU5BR,QAAQC,IAAR,MAV4B,wDAAH,qD","sources":["components/MoviesList/index.jsx","components/Trending/index.jsx","services/apiKey.jsx","services/api.jsx"],"sourcesContent":["import { Link, Outlet, useLocation } from 'react-router-dom';\n\nconst MoviesList = ({ films }) => {\n  const location = useLocation();\n  return (\n    <>\n      <ul className=\"moviesList\">\n        {films &&\n          films.map(({ id, title }) => (\n            <li key={id}>\n              <Link\n                to={`/movies/${id}`}\n                state={{\n                  from: location.pathname + location.search,\n                }}\n              >\n                {title}\n              </Link>\n            </li>\n          ))}\n        <Outlet />\n      </ul>\n    </>\n  );\n};\n\nexport default MoviesList;\n","import { fetchTrendingMovies } from 'services/api';\nimport { useEffect, useState } from 'react';\nimport MoviesList from 'components/MoviesList';\n\nconst Trending = () => {\n  const [films, setFilms] = useState([]);\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const { results } = await fetchTrendingMovies();\n        setFilms(results);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    fetchData();\n  }, []);\n\n  return <MoviesList films={films} />;\n};\n\nexport default Trending;\n","const API_KEY = '16b99e0971797b79067f0be2bdb79de1';\n\nexport default API_KEY;\n","import api_key from './apiKey';\n\nexport const fetchTrendingMovies = async () => {\n  try {\n    return await fetch(\n      `https://api.themoviedb.org/3/trending/movie/day?api_key=${api_key}`\n    ).then(response => {\n      if (response.ok === true) {\n        return response.json();\n      }\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const searchFilm = async query => {\n  try {\n    return await fetch(\n      `https://api.themoviedb.org/3/search/movie?api_key=${api_key}&query=${query}`\n    ).then(response => {\n      if (response.ok === true) {\n        return response.json();\n      }\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchFilmDetails = async filmId => {\n  try {\n    return await fetch(\n      `https://api.themoviedb.org/3/movie/${filmId}?api_key=${api_key}`\n    ).then(response => {\n      if (response.ok === true) {\n        return response.json();\n      }\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchFilmCast = async filmId => {\n  try {\n    return await fetch(\n      `https://api.themoviedb.org/3/movie/${filmId}/credits?api_key=${api_key}`\n    ).then(response => {\n      if (response.ok === true) {\n        return response.json();\n      }\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchFilmReviews = async filmId => {\n  try {\n    return await fetch(\n      `https://api.themoviedb.org/3/movie/${filmId}/reviews?api_key=${api_key}`\n    ).then(response => {\n      if (response.ok === true) {\n        return response.json();\n      }\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n"],"names":["films","location","useLocation","className","map","id","title","to","state","from","pathname","search","useState","setFilms","useEffect","fetchTrendingMovies","results","console","log","fetchData","fetch","api_key","then","response","ok","json","searchFilm","query","fetchFilmDetails","filmId","fetchFilmCast","fetchFilmReviews"],"sourceRoot":""}