{"version":3,"file":"static/js/Search.2092329c.chunk.js","mappings":"gLA0BA,UAxBmB,SAAC,GAAe,IAAbA,EAAY,EAAZA,MACdC,GAAWC,EAAAA,EAAAA,MACjB,OACE,+BACE,gBAAIC,UAAU,aAAd,UACGH,GACCA,EAAMI,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACR,yBACE,SAAC,KAAD,CACEC,GAAE,kBAAaF,GACfG,MAAO,CACLC,KAAMR,EAASS,SAAWT,EAASU,QAHvC,SAMGL,KAPID,EADD,KAYZ,SAAC,KAAD,QAIP,C,kHCeD,UAlCe,WACb,OAAsCO,EAAAA,EAAAA,UAAS,MAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAQF,EAAaG,IAAI,UAE/BC,EAAAA,EAAAA,YAAU,WAAM,wCAGd,uGAC4BC,EAAAA,EAAAA,IAAWH,GADvC,gBACUI,EADV,EACUA,QACRR,EAAeQ,GAFjB,4CAHc,sBACTJ,GADS,mCAQdK,EACD,GAAE,CAACL,IASJ,OACE,kBAAMf,UAAU,iBAAiBqB,SARd,SAAAC,GACnBA,EAAMC,iBACN,IAAMC,EAAOF,EAAMG,cACnBX,EAAgB,CAAEC,MAAOS,EAAKE,SAAShB,YAAYiB,QACnDH,EAAKI,OACN,EAGC,WACE,4BACE,kBAAOC,KAAK,OAAOC,KAAK,mBAE1B,mBAAQD,KAAK,SAAb,oBACCd,IAAS,SAAC,UAAD,CAAYlB,MAAOa,MAGlC,C,sLCnCD,EAFgB,mCCEHqB,EAAmB,mCAAG,uGAElBC,MAAM,2DAAD,OAC2CC,IAC3DC,MAAK,SAAAC,GACL,IAAoB,IAAhBA,EAASC,GACX,OAAOD,EAASE,MAEnB,IAR8B,wEAU/BC,QAAQC,IAAR,MAV+B,wDAAH,qDAcnBrB,EAAU,mCAAG,WAAMH,GAAN,0FAETiB,MAAM,qDAAD,OACqCC,EADrC,kBACsDlB,IACtEmB,MAAK,SAAAC,GACL,IAAoB,IAAhBA,EAASC,GACX,OAAOD,EAASE,MAEnB,IARqB,wEAUtBC,QAAQC,IAAR,MAVsB,wDAAH,sDAcVC,EAAgB,mCAAG,WAAMC,GAAN,0FAEfT,MAAM,sCAAD,OACsBS,EADtB,oBACwCR,IACxDC,MAAK,SAAAC,GACL,IAAoB,IAAhBA,EAASC,GACX,OAAOD,EAASE,MAEnB,IAR2B,wEAU5BC,QAAQC,IAAR,MAV4B,wDAAH,sDAchBG,EAAa,mCAAG,WAAMD,GAAN,0FAEZT,MAAM,sCAAD,OACsBS,EADtB,4BACgDR,IAChEC,MAAK,SAAAC,GACL,IAAoB,IAAhBA,EAASC,GACX,OAAOD,EAASE,MAEnB,IARwB,wEAUzBC,QAAQC,IAAR,MAVyB,wDAAH,sDAcbI,EAAgB,mCAAG,WAAMF,GAAN,0FAEfT,MAAM,sCAAD,OACsBS,EADtB,4BACgDR,IAChEC,MAAK,SAAAC,GACL,IAAoB,IAAhBA,EAASC,GACX,OAAOD,EAASE,MAEnB,IAR2B,wEAU5BC,QAAQC,IAAR,MAV4B,wDAAH,qD","sources":["components/MoviesList/index.jsx","components/Search/index.jsx","services/apiKey.jsx","services/api.jsx"],"sourcesContent":["import { Link, Outlet, useLocation } from 'react-router-dom';\n\nconst MoviesList = ({ films }) => {\n  const location = useLocation();\n  return (\n    <>\n      <ul className=\"moviesList\">\n        {films &&\n          films.map(({ id, title }) => (\n            <li key={id}>\n              <Link\n                to={`/movies/${id}`}\n                state={{\n                  from: location.pathname + location.search,\n                }}\n              >\n                {title}\n              </Link>\n            </li>\n          ))}\n        <Outlet />\n      </ul>\n    </>\n  );\n};\n\nexport default MoviesList;\n","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { searchFilm } from 'services/api';\nimport MoviesList from 'components/MoviesList';\n\nconst Search = () => {\n  const [searchQuery, setSearchQuery] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n\n  useEffect(() => {\n    if (!query) return;\n\n    async function fetchFilmOnQuery() {\n      const { results } = await searchFilm(query);\n      setSearchQuery(results);\n    }\n\n    fetchFilmOnQuery();\n  }, [query]);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const form = event.currentTarget;\n    setSearchParams({ query: form.elements.searchQuery.value });\n    form.reset();\n  };\n\n  return (\n    <form className=\"searchFilmForm\" onSubmit={handleSubmit}>\n      <label>\n        <input type=\"text\" name=\"searchQuery\" />\n      </label>\n      <button type=\"submit\">Search</button>\n      {query && <MoviesList films={searchQuery} />}\n    </form>\n  );\n};\n\nexport default Search;\n","const API_KEY = '16b99e0971797b79067f0be2bdb79de1';\n\nexport default API_KEY;\n","import api_key from './apiKey';\n\nexport const fetchTrendingMovies = async () => {\n  try {\n    return await fetch(\n      `https://api.themoviedb.org/3/trending/movie/day?api_key=${api_key}`\n    ).then(response => {\n      if (response.ok === true) {\n        return response.json();\n      }\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const searchFilm = async query => {\n  try {\n    return await fetch(\n      `https://api.themoviedb.org/3/search/movie?api_key=${api_key}&query=${query}`\n    ).then(response => {\n      if (response.ok === true) {\n        return response.json();\n      }\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchFilmDetails = async filmId => {\n  try {\n    return await fetch(\n      `https://api.themoviedb.org/3/movie/${filmId}?api_key=${api_key}`\n    ).then(response => {\n      if (response.ok === true) {\n        return response.json();\n      }\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchFilmCast = async filmId => {\n  try {\n    return await fetch(\n      `https://api.themoviedb.org/3/movie/${filmId}/credits?api_key=${api_key}`\n    ).then(response => {\n      if (response.ok === true) {\n        return response.json();\n      }\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchFilmReviews = async filmId => {\n  try {\n    return await fetch(\n      `https://api.themoviedb.org/3/movie/${filmId}/reviews?api_key=${api_key}`\n    ).then(response => {\n      if (response.ok === true) {\n        return response.json();\n      }\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n"],"names":["films","location","useLocation","className","map","id","title","to","state","from","pathname","search","useState","searchQuery","setSearchQuery","useSearchParams","searchParams","setSearchParams","query","get","useEffect","searchFilm","results","fetchFilmOnQuery","onSubmit","event","preventDefault","form","currentTarget","elements","value","reset","type","name","fetchTrendingMovies","fetch","api_key","then","response","ok","json","console","log","fetchFilmDetails","filmId","fetchFilmCast","fetchFilmReviews"],"sourceRoot":""}