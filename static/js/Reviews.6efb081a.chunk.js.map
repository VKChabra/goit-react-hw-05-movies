{"version":3,"file":"static/js/Reviews.6efb081a.chunk.js","mappings":"sPACA,EAAyB,wB,SC+BzB,EA3BgB,WAAO,IAAD,EACpB,GAAgCA,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACIC,GAASC,EAAAA,EAAAA,OACbC,EAAAA,EAAAA,YAAU,WAAM,wCACd,0FACEH,EADF,UACoBI,EAAAA,EAAAA,IAAkBH,EAAOI,SAD7C,8EADc,uBAAC,WAAD,wBAIdC,EACD,GAAE,CAACL,EAAOI,UAEX,IAAQE,EAAYR,EAAZQ,QACR,OACE,gCACGR,GACCQ,EAAQC,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACV,2BACE,iBAAKC,UAAWC,EAAhB,qBAAwCH,KACvCC,IAFMF,EADC,IAMiB,KAAtB,OAARV,QAAQ,IAARA,GAAA,UAAAA,EAAUQ,eAAV,eAAmBO,UAClB,kEAIP,C,sLC5BD,EAFgB,mCCEHC,EAAmB,mCAAG,uGAElBC,MAAM,2DAAD,OAC2CC,IAC3DC,MAAK,SAAAnB,GACL,IAAoB,IAAhBA,EAASoB,GACX,OAAOpB,EAASqB,MAEnB,IAR8B,wEAU/BC,QAAQC,IAAR,MAV+B,wDAAH,qDAcnBC,EAAW,mCAAG,WAAMC,GAAN,0FAEVR,MAAM,qDAAD,OACqCC,EADrC,kBACsDO,IACtEN,MAAK,SAAAnB,GACL,IAAoB,IAAhBA,EAASoB,GACX,OAAOpB,EAASqB,MAEnB,IARsB,wEAUvBC,QAAQC,IAAR,MAVuB,wDAAH,sDAcXG,EAAiB,mCAAG,WAAMpB,GAAN,0FAEhBW,MAAM,sCAAD,OACsBX,EADtB,oBACyCY,IACzDC,MAAK,SAAAnB,GACL,IAAoB,IAAhBA,EAASoB,GACX,OAAOpB,EAASqB,MAEnB,IAR4B,wEAU7BC,QAAQC,IAAR,MAV6B,wDAAH,sDAcjBI,EAAc,mCAAG,WAAMrB,GAAN,0FAEbW,MAAM,sCAAD,OACsBX,EADtB,4BACiDY,IACjEC,MAAK,SAAAnB,GACL,IAAoB,IAAhBA,EAASoB,GACX,OAAOpB,EAASqB,MAEnB,IARyB,wEAU1BC,QAAQC,IAAR,MAV0B,wDAAH,sDAcdlB,EAAiB,mCAAG,WAAMC,GAAN,0FAEhBW,MAAM,sCAAD,OACsBX,EADtB,4BACiDY,IACjEC,MAAK,SAAAnB,GACL,IAAoB,IAAhBA,EAASoB,GACX,OAAOpB,EAASqB,MAEnB,IAR4B,wEAU7BC,QAAQC,IAAR,MAV6B,wDAAH,qD","sources":["webpack://goit-react-hw-05-movies/./src/components/Movie/Reviews/reviews.module.css?2f70","components/Movie/Reviews/index.jsx","services/apiKey.jsx","services/api.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"author\":\"reviews_author__Sglo3\"};","import { fetchMovieReviews } from 'services/api';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport styles from './reviews.module.css';\n\nconst Reviews = () => {\n  const [response, setResponse] = useState('');\n  let params = useParams();\n  useEffect(() => {\n    async function setReviews() {\n      setResponse(await fetchMovieReviews(params.movieId));\n    }\n    setReviews();\n  }, [params.movieId]);\n\n  const { results } = response;\n  return (\n    <>\n      {response &&\n        results.map(({ id, author, content }) => (\n          <li key={id}>\n            <div className={styles.author}>Author: {author}</div>\n            {content}\n          </li>\n        ))}\n      {response?.results?.length === 0 && (\n        <div>Sorry but there are no reviews yet</div>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","const API_KEY = '16b99e0971797b79067f0be2bdb79de1';\n\nexport default API_KEY;\n","import api_key from './apiKey';\n\nexport const fetchTrendingMovies = async () => {\n  try {\n    return await fetch(\n      `https://api.themoviedb.org/3/trending/movie/day?api_key=${api_key}`\n    ).then(response => {\n      if (response.ok === true) {\n        return response.json();\n      }\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const searchMovie = async query => {\n  try {\n    return await fetch(\n      `https://api.themoviedb.org/3/search/movie?api_key=${api_key}&query=${query}`\n    ).then(response => {\n      if (response.ok === true) {\n        return response.json();\n      }\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchMovieDetails = async movieId => {\n  try {\n    return await fetch(\n      `https://api.themoviedb.org/3/movie/${movieId}?api_key=${api_key}`\n    ).then(response => {\n      if (response.ok === true) {\n        return response.json();\n      }\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchMovieCast = async movieId => {\n  try {\n    return await fetch(\n      `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${api_key}`\n    ).then(response => {\n      if (response.ok === true) {\n        return response.json();\n      }\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchMovieReviews = async movieId => {\n  try {\n    return await fetch(\n      `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${api_key}`\n    ).then(response => {\n      if (response.ok === true) {\n        return response.json();\n      }\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n"],"names":["useState","response","setResponse","params","useParams","useEffect","fetchMovieReviews","movieId","setReviews","results","map","id","author","content","className","styles","length","fetchTrendingMovies","fetch","api_key","then","ok","json","console","log","searchMovie","query","fetchMovieDetails","fetchMovieCast"],"sourceRoot":""}