{"version":3,"file":"static/js/Cast.bccde741.chunk.js","mappings":"sPACA,GAAgB,KAAO,oB,SCmCvB,EA/Ba,WACX,OAAgCA,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACIC,GAASC,EAAAA,EAAAA,OACbC,EAAAA,EAAAA,YAAU,WAAM,wCACd,0FACEH,EADF,UACoBI,EAAAA,EAAAA,IAAeH,EAAOI,SAD1C,8EADc,uBAAC,WAAD,wBAIdC,EACD,GAAE,CAACL,EAAOI,UAEX,IAAQE,EAASR,EAATQ,KACR,OACE,8BACGR,GACCQ,EAAKC,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,aAAb,OACP,gBAAaC,UAAWC,EAAAA,SAAxB,WACE,gBACEC,IACEH,EAAY,0CAC2BA,GACnC,oHAENI,IAAKL,IAENA,IATMD,EADF,KAehB,C,sLChCD,EAFgB,mCCEHO,EAAmB,mCAAG,uGAElBC,MAAM,2DAAD,OAC2CC,IAC3DC,MAAK,SAAApB,GACL,IAAoB,IAAhBA,EAASqB,GACX,OAAOrB,EAASsB,MAEnB,IAR8B,wEAU/BC,QAAQC,IAAR,MAV+B,wDAAH,qDAcnBC,EAAW,mCAAG,WAAMC,GAAN,0FAEVR,MAAM,qDAAD,OACqCC,EADrC,kBACsDO,IACtEN,MAAK,SAAApB,GACL,IAAoB,IAAhBA,EAASqB,GACX,OAAOrB,EAASsB,MAEnB,IARsB,wEAUvBC,QAAQC,IAAR,MAVuB,wDAAH,sDAcXG,EAAiB,mCAAG,WAAMrB,GAAN,0FAEhBY,MAAM,sCAAD,OACsBZ,EADtB,oBACyCa,IACzDC,MAAK,SAAApB,GACL,IAAoB,IAAhBA,EAASqB,GACX,OAAOrB,EAASsB,MAEnB,IAR4B,wEAU7BC,QAAQC,IAAR,MAV6B,wDAAH,sDAcjBnB,EAAc,mCAAG,WAAMC,GAAN,0FAEbY,MAAM,sCAAD,OACsBZ,EADtB,4BACiDa,IACjEC,MAAK,SAAApB,GACL,IAAoB,IAAhBA,EAASqB,GACX,OAAOrB,EAASsB,MAEnB,IARyB,wEAU1BC,QAAQC,IAAR,MAV0B,wDAAH,sDAcdI,EAAiB,mCAAG,WAAMtB,GAAN,0FAEhBY,MAAM,sCAAD,OACsBZ,EADtB,4BACiDa,IACjEC,MAAK,SAAApB,GACL,IAAoB,IAAhBA,EAASqB,GACX,OAAOrB,EAASsB,MAEnB,IAR4B,wEAU7BC,QAAQC,IAAR,MAV6B,wDAAH,qD","sources":["webpack://goit-react-hw-05-movies/./src/components/Movie/Cast/cast.module.css?cdf0","components/Movie/Cast/index.jsx","services/apiKey.jsx","services/api.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"cast\":\"cast_cast__0cwgf\"};","import { fetchMovieCast } from 'services/api';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport styles from './cast.module.css';\n\nconst Cast = () => {\n  const [response, setResponse] = useState('');\n  let params = useParams();\n  useEffect(() => {\n    async function setCast() {\n      setResponse(await fetchMovieCast(params.movieId));\n    }\n    setCast();\n  }, [params.movieId]);\n\n  const { cast } = response;\n  return (\n    <>\n      {response &&\n        cast.map(({ id, name, profile_path }) => (\n          <li key={id} className={styles.castList}>\n            <img\n              src={\n                profile_path\n                  ? `https://image.tmdb.org/t/p/w300/${profile_path}`\n                  : 'https://upload.wikimedia.org/wikipedia/commons/thumb/a/ac/No_image_available.svg/300px-No_image_available.svg.png'\n              }\n              alt={name}\n            />\n            {name}\n          </li>\n        ))}\n    </>\n  );\n};\n\nexport default Cast;\n","const API_KEY = '16b99e0971797b79067f0be2bdb79de1';\n\nexport default API_KEY;\n","import api_key from './apiKey';\n\nexport const fetchTrendingMovies = async () => {\n  try {\n    return await fetch(\n      `https://api.themoviedb.org/3/trending/movie/day?api_key=${api_key}`\n    ).then(response => {\n      if (response.ok === true) {\n        return response.json();\n      }\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const searchMovie = async query => {\n  try {\n    return await fetch(\n      `https://api.themoviedb.org/3/search/movie?api_key=${api_key}&query=${query}`\n    ).then(response => {\n      if (response.ok === true) {\n        return response.json();\n      }\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchMovieDetails = async movieId => {\n  try {\n    return await fetch(\n      `https://api.themoviedb.org/3/movie/${movieId}?api_key=${api_key}`\n    ).then(response => {\n      if (response.ok === true) {\n        return response.json();\n      }\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchMovieCast = async movieId => {\n  try {\n    return await fetch(\n      `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${api_key}`\n    ).then(response => {\n      if (response.ok === true) {\n        return response.json();\n      }\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchMovieReviews = async movieId => {\n  try {\n    return await fetch(\n      `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${api_key}`\n    ).then(response => {\n      if (response.ok === true) {\n        return response.json();\n      }\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n"],"names":["useState","response","setResponse","params","useParams","useEffect","fetchMovieCast","movieId","setCast","cast","map","id","name","profile_path","className","styles","src","alt","fetchTrendingMovies","fetch","api_key","then","ok","json","console","log","searchMovie","query","fetchMovieDetails","fetchMovieReviews"],"sourceRoot":""}