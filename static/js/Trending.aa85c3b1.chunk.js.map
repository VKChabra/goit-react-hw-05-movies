{"version":3,"file":"static/js/Trending.aa85c3b1.chunk.js","mappings":"+KA6CA,UA1CmB,SAAC,GAAgB,IAAdA,EAAa,EAAbA,OACdC,GAAWC,EAAAA,EAAAA,MACjB,OACE,gCACGF,IACC,eAAIG,UAAU,aAAd,SACGH,EAAOI,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACV,yBACE,SAAC,KAAD,CACEC,GAAE,kBAAaF,GACfG,MAAO,CACLC,KAAMR,EAASS,SAAWT,EAASU,QAHvC,SAMGL,KAPID,EADC,OAchB,SAAC,KAAD,IACoB,KAAb,OAANL,QAAM,IAANA,OAAA,EAAAA,EAAQY,SAAoC,YAApBX,EAASU,SAChC,2DAIP,C,yGCRD,UAjBiB,WACf,OAA4BE,EAAAA,EAAAA,UAAS,IAArC,eAAOb,EAAP,KAAec,EAAf,KAaA,OAZAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,gHAE8BC,EAAAA,EAAAA,MAF9B,gBAEYC,EAFZ,EAEYA,QACRH,EAAUG,GAHd,gDAKIC,QAAQC,IAAR,MALJ,0DADc,uBAAC,WAAD,wBASdC,EACD,GAAE,KAEI,SAAC,UAAD,CAAYpB,OAAQA,GAC5B,C,sLCjBD,EAFgB,mCCEHgB,EAAmB,mCAAG,uGAElBK,MAAM,2DAAD,OAC2CC,IAC3DC,MAAK,SAAAC,GACL,IAAoB,IAAhBA,EAASC,GACX,OAAOD,EAASE,MAEnB,IAR8B,wEAU/BR,QAAQC,IAAR,MAV+B,wDAAH,qDAcnBQ,EAAW,mCAAG,WAAMC,GAAN,0FAEVP,MAAM,qDAAD,OACqCC,EADrC,kBACsDM,IACtEL,MAAK,SAAAC,GACL,IAAoB,IAAhBA,EAASC,GACX,OAAOD,EAASE,MAEnB,IARsB,wEAUvBR,QAAQC,IAAR,MAVuB,wDAAH,sDAcXU,EAAiB,mCAAG,WAAMC,GAAN,0FAEhBT,MAAM,sCAAD,OACsBS,EADtB,oBACyCR,IACzDC,MAAK,SAAAC,GACL,IAAoB,IAAhBA,EAASC,GACX,OAAOD,EAASE,MAEnB,IAR4B,wEAU7BR,QAAQC,IAAR,MAV6B,wDAAH,sDAcjBY,EAAc,mCAAG,WAAMD,GAAN,0FAEbT,MAAM,sCAAD,OACsBS,EADtB,4BACiDR,IACjEC,MAAK,SAAAC,GACL,IAAoB,IAAhBA,EAASC,GACX,OAAOD,EAASE,MAEnB,IARyB,wEAU1BR,QAAQC,IAAR,MAV0B,wDAAH,sDAcda,EAAiB,mCAAG,WAAMF,GAAN,0FAEhBT,MAAM,sCAAD,OACsBS,EADtB,4BACiDR,IACjEC,MAAK,SAAAC,GACL,IAAoB,IAAhBA,EAASC,GACX,OAAOD,EAASE,MAEnB,IAR4B,wEAU7BR,QAAQC,IAAR,MAV6B,wDAAH,qD","sources":["components/MoviesList/index.jsx","components/Trending/index.jsx","services/apiKey.jsx","services/api.jsx"],"sourcesContent":["import { Link, Outlet, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <>\n      {movies && (\n        <ul className=\"moviesList\">\n          {movies.map(({ id, title }) => (\n            <li key={id}>\n              <Link\n                to={`/movies/${id}`}\n                state={{\n                  from: location.pathname + location.search,\n                }}\n              >\n                {title}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      )}\n      <Outlet />\n      {movies?.length === 0 && location.search !== '?query=' && (\n        <div>Sorry, there are no results</div>\n      )}\n    </>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      genre_ids: PropTypes.arrayOf(PropTypes.number).isRequired,\n      overview: PropTypes.string,\n      poster_path: PropTypes.string,\n      release_date: PropTypes.string,\n      vote_average: PropTypes.number,\n    })\n  ),\n};\n\nexport default MoviesList;\n","import { fetchTrendingMovies } from 'services/api';\nimport { useEffect, useState } from 'react';\nimport MoviesList from 'components/MoviesList';\n\nconst Trending = () => {\n  const [movies, setMovies] = useState([]);\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const { results } = await fetchTrendingMovies();\n        setMovies(results);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    fetchData();\n  }, []);\n\n  return <MoviesList movies={movies} />;\n};\n\nexport default Trending;\n","const API_KEY = '16b99e0971797b79067f0be2bdb79de1';\n\nexport default API_KEY;\n","import api_key from './apiKey';\n\nexport const fetchTrendingMovies = async () => {\n  try {\n    return await fetch(\n      `https://api.themoviedb.org/3/trending/movie/day?api_key=${api_key}`\n    ).then(response => {\n      if (response.ok === true) {\n        return response.json();\n      }\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const searchMovie = async query => {\n  try {\n    return await fetch(\n      `https://api.themoviedb.org/3/search/movie?api_key=${api_key}&query=${query}`\n    ).then(response => {\n      if (response.ok === true) {\n        return response.json();\n      }\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchMovieDetails = async movieId => {\n  try {\n    return await fetch(\n      `https://api.themoviedb.org/3/movie/${movieId}?api_key=${api_key}`\n    ).then(response => {\n      if (response.ok === true) {\n        return response.json();\n      }\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchMovieCast = async movieId => {\n  try {\n    return await fetch(\n      `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${api_key}`\n    ).then(response => {\n      if (response.ok === true) {\n        return response.json();\n      }\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchMovieReviews = async movieId => {\n  try {\n    return await fetch(\n      `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${api_key}`\n    ).then(response => {\n      if (response.ok === true) {\n        return response.json();\n      }\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n"],"names":["movies","location","useLocation","className","map","id","title","to","state","from","pathname","search","length","useState","setMovies","useEffect","fetchTrendingMovies","results","console","log","fetchData","fetch","api_key","then","response","ok","json","searchMovie","query","fetchMovieDetails","movieId","fetchMovieCast","fetchMovieReviews"],"sourceRoot":""}