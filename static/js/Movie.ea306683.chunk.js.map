{"version":3,"file":"static/js/Movie.ea306683.chunk.js","mappings":"2OAoEA,UAzDc,WACZ,IAAIA,GAASC,EAAAA,EAAAA,MACb,GAAgCC,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,OAMjBC,EAAAA,EAAAA,YAAU,WAAM,wCACd,0FACEL,EADF,UACoBM,EAAAA,EAAAA,IAAiBV,EAAOW,QAD5C,8EADc,uBAAC,WAAD,wBAIdC,EACD,GAAE,CAACZ,EAAOW,SAEX,IAAQE,EACNV,EADMU,MAAOC,EACbX,EADaW,OAAQC,EACrBZ,EADqBY,SAAUC,EAC/Bb,EAD+Ba,YAAaC,EAC5Cd,EAD4Cc,aAAcC,EAC1Df,EAD0De,aAEtDC,EAA4B,KAAbhB,EACrB,OACE,iCACIgB,IAAgB,SAAC,IAAD,KAClB,mBAAQC,KAAK,SAASC,QAjBT,WAAO,IAAD,IACrBd,EAAQ,iBAACF,QAAD,IAACA,GAAD,UAACA,EAAUiB,aAAX,aAAC,EAAiBC,YAAlB,QAA0B,IACnC,EAeG,sBAGA,4BACE,gBACEC,IACER,EAAW,0CAC4BA,GACnC,oHAENS,IAAKZ,KAEP,2BACGA,EADH,IACWI,EADX,QAGA,0CAAkBC,EAAlB,QACA,wCAAgBH,MAChB,sCACWI,GAAgBL,EAAOY,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,UAEhE,iBAAKC,UAAU,WAAf,WACE,SAAC,KAAD,CAAMC,GAAG,OAAOT,MAAOjB,EAASiB,MAAhC,kBAEQ,KACR,SAAC,KAAD,CAAMS,GAAG,UAAUT,MAAOjB,EAASiB,MAAnC,4BAKJ,SAAC,KAAD,MAGL,C,sLChED,EAFgB,mCCEHU,EAAmB,mCAAG,uGAElBC,MAAM,2DAAD,OAC2CC,IAC3DC,MAAK,SAAAhC,GACL,IAAoB,IAAhBA,EAASiC,GACX,OAAOjC,EAASkC,MAEnB,IAR8B,wEAU/BC,QAAQC,IAAR,MAV+B,wDAAH,qDAcnBC,EAAU,mCAAG,WAAMC,GAAN,0FAETR,MAAM,qDAAD,OACqCC,EADrC,kBACsDO,IACtEN,MAAK,SAAAhC,GACL,IAAoB,IAAhBA,EAASiC,GACX,OAAOjC,EAASkC,MAEnB,IARqB,wEAUtBC,QAAQC,IAAR,MAVsB,wDAAH,sDAcV7B,EAAgB,mCAAG,WAAMC,GAAN,0FAEfsB,MAAM,sCAAD,OACsBtB,EADtB,oBACwCuB,IACxDC,MAAK,SAAAhC,GACL,IAAoB,IAAhBA,EAASiC,GACX,OAAOjC,EAASkC,MAEnB,IAR2B,wEAU5BC,QAAQC,IAAR,MAV4B,wDAAH,sDAchBG,EAAa,mCAAG,WAAM/B,GAAN,0FAEZsB,MAAM,sCAAD,OACsBtB,EADtB,4BACgDuB,IAChEC,MAAK,SAAAhC,GACL,IAAoB,IAAhBA,EAASiC,GACX,OAAOjC,EAASkC,MAEnB,IARwB,wEAUzBC,QAAQC,IAAR,MAVyB,wDAAH,sDAcbI,EAAgB,mCAAG,WAAMhC,GAAN,0FAEfsB,MAAM,sCAAD,OACsBtB,EADtB,4BACgDuB,IAChEC,MAAK,SAAAhC,GACL,IAAoB,IAAhBA,EAASiC,GACX,OAAOjC,EAASkC,MAEnB,IAR2B,wEAU5BC,QAAQC,IAAR,MAV4B,wDAAH,qD","sources":["components/Movie/index.jsx","services/apiKey.jsx","services/api.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport {\n  useParams,\n  Link,\n  Outlet,\n  useLocation,\n  useNavigate,\n} from 'react-router-dom';\nimport { fetchFilmDetails } from 'services/api';\nimport Loader from 'components/Loader';\n\nconst Movie = () => {\n  let params = useParams();\n  const [response, setResponse] = useState('');\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  const onGoBack = () => {\n    navigate(location?.state?.from ?? '/');\n  };\n\n  useEffect(() => {\n    async function setDetails() {\n      setResponse(await fetchFilmDetails(params.filmId));\n    }\n    setDetails();\n  }, [params.filmId]);\n\n  const { title, genres, overview, poster_path, release_date, vote_average } =\n    response;\n  const responseTrue = response !== '';\n  return (\n    <>\n      {!responseTrue && <Loader />}\n      <button type=\"button\" onClick={onGoBack}>\n        Go back\n      </button>\n      <div>\n        <img\n          src={\n            poster_path\n              ? `https://image.tmdb.org/t/p/w300/${poster_path}`\n              : 'https://upload.wikimedia.org/wikipedia/commons/thumb/a/ac/No_image_available.svg/300px-No_image_available.svg.png'\n          }\n          alt={title}\n        />\n        <div>\n          {title}({release_date})\n        </div>\n        <div>User score: {vote_average}%</div>\n        <div>Overview: {overview}</div>\n        <div>\n          Genres: {responseTrue && genres.map(genre => genre.name).join(', ')}\n        </div>\n        <div className=\"moreInfo\">\n          <Link to=\"cast\" state={location.state}>\n            Cast\n          </Link>{' '}\n          <Link to=\"reviews\" state={location.state}>\n            Reviews\n          </Link>\n        </div>\n      </div>\n      <Outlet />\n    </>\n  );\n};\n\nexport default Movie;\n","const API_KEY = '16b99e0971797b79067f0be2bdb79de1';\n\nexport default API_KEY;\n","import api_key from './apiKey';\n\nexport const fetchTrendingMovies = async () => {\n  try {\n    return await fetch(\n      `https://api.themoviedb.org/3/trending/movie/day?api_key=${api_key}`\n    ).then(response => {\n      if (response.ok === true) {\n        return response.json();\n      }\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const searchFilm = async query => {\n  try {\n    return await fetch(\n      `https://api.themoviedb.org/3/search/movie?api_key=${api_key}&query=${query}`\n    ).then(response => {\n      if (response.ok === true) {\n        return response.json();\n      }\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchFilmDetails = async filmId => {\n  try {\n    return await fetch(\n      `https://api.themoviedb.org/3/movie/${filmId}?api_key=${api_key}`\n    ).then(response => {\n      if (response.ok === true) {\n        return response.json();\n      }\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchFilmCast = async filmId => {\n  try {\n    return await fetch(\n      `https://api.themoviedb.org/3/movie/${filmId}/credits?api_key=${api_key}`\n    ).then(response => {\n      if (response.ok === true) {\n        return response.json();\n      }\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchFilmReviews = async filmId => {\n  try {\n    return await fetch(\n      `https://api.themoviedb.org/3/movie/${filmId}/reviews?api_key=${api_key}`\n    ).then(response => {\n      if (response.ok === true) {\n        return response.json();\n      }\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n"],"names":["params","useParams","useState","response","setResponse","location","useLocation","navigate","useNavigate","useEffect","fetchFilmDetails","filmId","setDetails","title","genres","overview","poster_path","release_date","vote_average","responseTrue","type","onClick","state","from","src","alt","map","genre","name","join","className","to","fetchTrendingMovies","fetch","api_key","then","ok","json","console","log","searchFilm","query","fetchFilmCast","fetchFilmReviews"],"sourceRoot":""}